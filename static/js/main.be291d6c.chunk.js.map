{"version":3,"sources":["abi/ItemContractABI.js","App.js","reportWebVitals.js","index.js"],"names":["itemAbi","constant","inputs","name","outputs","internalType","type","stateMutability","contract","Web3","givenProvider","eth","Contract","App","useState","itemName","setItemName","number","setUint","getNumber","setGet","statusInfo","setStatusInfo","numberSet","t","a","preventDefault","window","ethereum","alert","ItemName","ItemDesc","ItemUniqueId","toString","enable","accounts","account","methods","createNewItem","send","from","txReturn","numberGet","getItemCountCurrent","call","itemCount","itemLast","getItemDetails","post","className","onSubmit","onChange","target","value","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be291d6c.chunk.js","sourcesContent":["\nexport const itemAbi = [\n  {\n      constant: false,\n      inputs: [],\n      name: \"getItemCountCurrent\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"itemCountCurrent\",\n          type: \"uint256\"\n        }\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true\n  },\n    {\n    constant: false,\n    inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"_itemIndex\",\n          type: \"uint256\"\n        }\n      ],\n      name: \"getItemDetails\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"itemName\",\n          type: \"string\"\n        }\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true\n    },\n    {\n    constant: false,\n    inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"_itemIndex\",\n          type: \"uint256\"\n        },\n        {\n          internalType: \"string\",\n          name: \"_uniqueId\",\n          type: \"string\"\n        }\n      ],\n      name: \"authenticateOwner\",\n      \"outputs\": [\n        {\n          internalType: \"bool\",\n          name: \"isAuthentic\",\n          type: \"bool\"\n        }\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true\n    },\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"_itemName\",\n          type: \"string\"\n        },\n        {\n          internalType: \"string\",\n          name: \"_itemDescription\",\n          type: \"string\"\n        },\n        {\n          internalType: \"string\",\n          name: \"_uniqueId\",\n          type: \"string\"\n        }\n      ],\n      name: \"createNewItem\",\n      \"outputs\": [\n        {\n          internalType: \"bool\",\n          name: \"newItemCreatedSuccess\",\n          type: \"bool\"\n        }\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    },\n];\n","import React, { useState } from \"react\";\nimport { itemAbi } from \"./abi/ItemContractABI.js\";\nimport Web3 from \"web3\";\nimport './App.css';\n\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x42851cD309381Cb82ecF509B29bc1bf2A96fc123\";  // rinkeby ItemContract 21:30 29/11\nconst contract = new web3.eth.Contract(itemAbi, contractAddress);\n\n//const contractAddress = \"0xf84bA9dA6790806417B4Ffb7106A07cB7C29f8AF\";  // Rinkeby ItemContract 15:40 29/11\n//const contractAddress = \"0xc6ac8C9A8e89dC7f75005CA71D5aaA5D3932435b\";  // Ropsten ItemContract 18:30 29/11 not working?\n//const contractAddress = \"0x3801be3C2f4Fad5B4d33079cAd5D60E361b0DCB4\";  // Goerli ItemContract\n//const contractAddress = \"0xb2Cf3586410734c79f9E881745CEd50dB5859D96\";  // ropsten simple storage - worked!\n//const contractAddress = \"0xcc331359fEf4de4756725Fb100Fa2dBdA6C786a4\";  // ganache-cli simple storage - not working nonce?\n//const contractAddress = \"0x9422A945C8CB5d8c199ACd9dA1417eE1b964d586\";  // ganache-cli item - not working nonce?\n\n/// Writen [hacked together] as part of the consensys bootcamp to provide a basic interface to\n/// a solidity smart contract.\n/// Sends one ethereum transaction to a public testnet to create an item (and an ERC1155 NFT)\n/// Sends another transaction to reteive the item name from the blockchain.\n/// Nasty front end application that looks like something written as an java applet or even in cobol!\n/// There's a good reason I'm a backend developer ;-)\n\n/// Works (mostly) as of 15:30 (GMT) on 30-Nov-2021\n\n\nfunction App() {\n  const [itemName, setItemName] = useState(\"\");     // the item name\n  const [number, setUint] = useState(0);\n  const [getNumber, setGet] = useState(\"Not yet called\");  // the item name from the blockchain\n  const [text, setText] = useState(\"\");\n  var   [statusInfo, setStatusInfo] = useState(\"Waiting for user input\");  // hold the status of blockchain calls\n  //const [authText, setAuthText] = useState(\"\");\n\n  // working 16:00 30/11\n  const numberSet = async (t) => {\n    t.preventDefault();\n\n    // some very basic wallet checking\n    if (typeof window.ethereum === \"undefined\") {\n      alert(\"Please Note; This page requires digital wallet, please install MetaMask. Web site: https://metamask.io\");\n      return false;\n    }\n\n    // should take three inputs then create an item\n    // (todo) but oh no it's react, horrid, fragile and I don't know how it works!\n    //console.log(\"Create New Item Called\");\n    //console.log(itemName);\n    //console.log(number);\n    var ItemName = itemName;                  // Grab item name\n    var ItemDesc = \"Test Item Description\"    // Create dummy data\n    var ItemUniqueId = number.toString();     // crazy really but just get hack it to work for now!\n\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    //console.log(account);\n    setStatusInfo(\"Waiting for confirmation from the blockchain\");\n    const txReturn = await contract.methods.createNewItem(ItemName, ItemDesc, ItemUniqueId).send({ from: account });\n    if (txReturn) { setStatusInfo(\"Item Created\"); }\n    else {          setStatusInfo(\"Encountered a problem creating Item\"); }  // react will have threw an exception anyway!\n  };\n\n  // working 16:00 30/11\n  const numberGet = async (t) => {\n    t.preventDefault();\n\n    // some very basic wallet checking\n    if (typeof window.ethereum === \"undefined\") {\n      alert(\"Please Note; This page requires digital wallet, please install MetaMask. Web site: https://metamask.io\");\n      return false;\n    }\n    //console.log(\"Retrive called\");\n    setStatusInfo(\"Waiting for item name retrieval from the blockchain\");\n    const itemCount = await contract.methods.getItemCountCurrent().call();   // working on rinkeby 22:00 29/11\n    var itemLast = itemCount - 1;\n    const post = await contract.methods.getItemDetails(itemLast).call();     // working on 22:25 29/11\n    //console.log(post);\n    setGet(post);    // calls a setter on a state varabile?\n    setStatusInfo(\"Last item name retrieved successfully\");\n  };\n\n  /** taken out 30 Nov - now causing problems - maybe react?\n  const authOwner = async (t) => {\n    t.preventDefault();\n    console.log(\"Auth Owner called\");\n    // need input of sercet number - text to number - then into abi call\n\n    const itemCount = await contract.methods.getItemCountCurrent().call();   // working on rinkeby 22:00 29/11\n    console.log(itemCount);\n    var itemLast = itemCount - 1;\n    const isAuth = await contract.methods.authenticateOwner(itemLast, \"Test\").call();  // working on rinkeby 22:20 29/11\n    var itemStatus = \"\";\n    if (isAuth) {\n       itemStatus = \"TRUE: sercet code provided matches recorded details\";\n    } else {\n      itemStatus = \"FALSE: Please check the code provided\";\n    }\n  }\n            <!--\n            <h4>Authenticate Item</h4>\n            <button className=\"button\" onClick={authOwner} type=\"button\">Authenticate Last Item</button>\n            <label><b>Item Authenticicy: {authText}</b></label>\n            <br/> -->\n  */\n\n  return (\n     <div className=\"main\">\n          <div className=\"card\">\n\n            <label><h2><b>Create Item and Authenticate Prototype</b></h2></label>\n\n            <h4>Create New Item</h4>\n            <form className=\"form\" onSubmit={numberSet}>\n              <label>Please Enter The Item Name:\n                <input className=\"input\" type=\"text\" name=\"iname\" onChange={(t) => setItemName(t.target.value)} />\n              </label>\n              <label>Please Enter a secret code number:\n                <input className=\"input\" type=\"text\" name=\"name\" onChange={(t) => setUint(t.target.value)} />\n              </label>\n              <button className=\"button\" type=\"submit\" value=\"Confirm\">Create Test Item (Opens MetaMask)</button>\n            </form>\n            <br/>\n\n            <h4>Retrive Item</h4>\n            <button className=\"button\" onClick={numberGet} type=\"button\">Retrieve Last Item</button>\n            <br/>\n            <label><b>Item Name: {getNumber}</b></label>\n            <br/>\n            <br/>\n            <label><b>Status: {statusInfo}</b></label>\n          </div>\n    </div>\n );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}